# Autogenerated wrapper script for xtl_jll for any
export xany, xbase64, xbasic_fixed_string, xclosure, xcompare, xcomplex, xcomplex_sequence, xdynamic_bitset, xfunctional, xhalf_float, xhalf_float_impl, xhash, xhierarchy_generator, xiterator_base, xjson, xmasked_value, xmasked_value_meta, xmeta_utils, xmultimethods, xoptional, xoptional_meta, xoptional_sequence, xplatform, xproxy_wrapper, xsequence, xspan, xspan_impl, xsystem, xtl_config, xtype_traits, xvariant, xvariant_impl, xvisitor

JLLWrappers.@generate_wrapper_header("xtl")
JLLWrappers.@declare_file_product(xany)
JLLWrappers.@declare_file_product(xbase64)
JLLWrappers.@declare_file_product(xbasic_fixed_string)
JLLWrappers.@declare_file_product(xclosure)
JLLWrappers.@declare_file_product(xcompare)
JLLWrappers.@declare_file_product(xcomplex)
JLLWrappers.@declare_file_product(xcomplex_sequence)
JLLWrappers.@declare_file_product(xdynamic_bitset)
JLLWrappers.@declare_file_product(xfunctional)
JLLWrappers.@declare_file_product(xhalf_float)
JLLWrappers.@declare_file_product(xhalf_float_impl)
JLLWrappers.@declare_file_product(xhash)
JLLWrappers.@declare_file_product(xhierarchy_generator)
JLLWrappers.@declare_file_product(xiterator_base)
JLLWrappers.@declare_file_product(xjson)
JLLWrappers.@declare_file_product(xmasked_value)
JLLWrappers.@declare_file_product(xmasked_value_meta)
JLLWrappers.@declare_file_product(xmeta_utils)
JLLWrappers.@declare_file_product(xmultimethods)
JLLWrappers.@declare_file_product(xoptional)
JLLWrappers.@declare_file_product(xoptional_meta)
JLLWrappers.@declare_file_product(xoptional_sequence)
JLLWrappers.@declare_file_product(xplatform)
JLLWrappers.@declare_file_product(xproxy_wrapper)
JLLWrappers.@declare_file_product(xsequence)
JLLWrappers.@declare_file_product(xspan)
JLLWrappers.@declare_file_product(xspan_impl)
JLLWrappers.@declare_file_product(xsystem)
JLLWrappers.@declare_file_product(xtl_config)
JLLWrappers.@declare_file_product(xtype_traits)
JLLWrappers.@declare_file_product(xvariant)
JLLWrappers.@declare_file_product(xvariant_impl)
JLLWrappers.@declare_file_product(xvisitor)
function __init__()
    JLLWrappers.@generate_init_header()
    JLLWrappers.@init_file_product(
        xany,
        "include/xtl/xany.hpp",
    )

    JLLWrappers.@init_file_product(
        xbase64,
        "include/xtl/xbase64.hpp",
    )

    JLLWrappers.@init_file_product(
        xbasic_fixed_string,
        "include/xtl/xbasic_fixed_string.hpp",
    )

    JLLWrappers.@init_file_product(
        xclosure,
        "include/xtl/xclosure.hpp",
    )

    JLLWrappers.@init_file_product(
        xcompare,
        "include/xtl/xcompare.hpp",
    )

    JLLWrappers.@init_file_product(
        xcomplex,
        "include/xtl/xcomplex.hpp",
    )

    JLLWrappers.@init_file_product(
        xcomplex_sequence,
        "include/xtl/xcomplex_sequence.hpp",
    )

    JLLWrappers.@init_file_product(
        xdynamic_bitset,
        "include/xtl/xdynamic_bitset.hpp",
    )

    JLLWrappers.@init_file_product(
        xfunctional,
        "include/xtl/xfunctional.hpp",
    )

    JLLWrappers.@init_file_product(
        xhalf_float,
        "include/xtl/xhalf_float.hpp",
    )

    JLLWrappers.@init_file_product(
        xhalf_float_impl,
        "include/xtl/xhalf_float_impl.hpp",
    )

    JLLWrappers.@init_file_product(
        xhash,
        "include/xtl/xhash.hpp",
    )

    JLLWrappers.@init_file_product(
        xhierarchy_generator,
        "include/xtl/xhierarchy_generator.hpp",
    )

    JLLWrappers.@init_file_product(
        xiterator_base,
        "include/xtl/xiterator_base.hpp",
    )

    JLLWrappers.@init_file_product(
        xjson,
        "include/xtl/xjson.hpp",
    )

    JLLWrappers.@init_file_product(
        xmasked_value,
        "include/xtl/xmasked_value.hpp",
    )

    JLLWrappers.@init_file_product(
        xmasked_value_meta,
        "include/xtl/xmasked_value_meta.hpp",
    )

    JLLWrappers.@init_file_product(
        xmeta_utils,
        "include/xtl/xmeta_utils.hpp",
    )

    JLLWrappers.@init_file_product(
        xmultimethods,
        "include/xtl/xmultimethods.hpp",
    )

    JLLWrappers.@init_file_product(
        xoptional,
        "include/xtl/xoptional.hpp",
    )

    JLLWrappers.@init_file_product(
        xoptional_meta,
        "include/xtl/xoptional_meta.hpp",
    )

    JLLWrappers.@init_file_product(
        xoptional_sequence,
        "include/xtl/xoptional_sequence.hpp",
    )

    JLLWrappers.@init_file_product(
        xplatform,
        "include/xtl/xplatform.hpp",
    )

    JLLWrappers.@init_file_product(
        xproxy_wrapper,
        "include/xtl/xproxy_wrapper.hpp",
    )

    JLLWrappers.@init_file_product(
        xsequence,
        "include/xtl/xsequence.hpp",
    )

    JLLWrappers.@init_file_product(
        xspan,
        "include/xtl/xspan.hpp",
    )

    JLLWrappers.@init_file_product(
        xspan_impl,
        "include/xtl/xspan_impl.hpp",
    )

    JLLWrappers.@init_file_product(
        xsystem,
        "include/xtl/xsystem.hpp",
    )

    JLLWrappers.@init_file_product(
        xtl_config,
        "include/xtl/xtl_config.hpp",
    )

    JLLWrappers.@init_file_product(
        xtype_traits,
        "include/xtl/xtype_traits.hpp",
    )

    JLLWrappers.@init_file_product(
        xvariant,
        "include/xtl/xvariant.hpp",
    )

    JLLWrappers.@init_file_product(
        xvariant_impl,
        "include/xtl/xvariant_impl.hpp",
    )

    JLLWrappers.@init_file_product(
        xvisitor,
        "include/xtl/xvisitor.hpp",
    )

    JLLWrappers.@generate_init_footer()
end  # __init__()
